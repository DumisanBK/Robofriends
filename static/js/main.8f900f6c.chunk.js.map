{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/ErrorBoundry.js","Components/Scroll.js","Components/SearchBox.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","user","i","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","e","searchfield","target","value","fetch","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCSCQ,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,6BAAKC,IACL,4BAAIC,WCYLI,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACG,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACM,cAAC,EAAD,CAECV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCcbC,E,kDArBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHA,E,qDAQlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAI5B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAKL,MAAMO,a,GAlBCC,aCQZC,EARA,SAACT,GACZ,OACI,qBAAKU,MAAO,CAACC,UAAY,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKb,EAAMO,YCQJO,EAXG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKxB,UAAU,MAAf,SACA,uBAAOA,UAAU,kCAChByB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OC2CJI,E,kDA1CX,aAAgB,IAAD,8BACX,gBAeJC,eAAiB,SAACC,GACd,EAAKf,SAAS,CAACgB,YAAaD,EAAEE,OAAOC,SAfrC,EAAKvB,MAAQ,CACTN,OAAS,GACT2B,YAAa,IAJN,E,qDASf,WAAoB,IAAD,OACfG,MAAM,8CACL5C,MAAK,SAAA6C,GAAQ,OAAGA,EAASC,UACzB9C,MAAK,SAAA+C,GAAK,OAAG,EAAKtB,SAAS,CAACX,OAAQiC,S,oBAO1C,WAAW,IAAD,EACwBvB,KAAKJ,MAA5BN,EADD,EACCA,OAAQ2B,EADT,EACSA,YACZO,EAAelC,EAAOmC,QAAO,SAAAC,GAC/B,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASX,EAAYU,kBAGzD,OAAQrC,EAAOuC,OAGX,sBAAK3C,UAAU,KAAf,UACA,6CACA,cAAC,EAAD,CAAWwB,aAAcV,KAAKe,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACc,cAAC,EAAD,CAAUzB,OAAQkC,WAPrC,gD,GA5BarB,a,MCApB2B,IAASC,OAAQ,eAAC,IAAMC,WAAP,eAAmB,cAAC,EAAD,OAA2BC,SAASC,eAAe,SAKvF7D,M","file":"static/js/main.8f900f6c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n        <div className=\" tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5 \">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200*200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n return (\r\n    <div>\r\n        {\r\n            robots.map((user, i) => {\r\n                return (\r\n                      <Card\r\n                       key={i} \r\n                       id={robots[i].id} \r\n                       name={robots[i].name} \r\n                       email={robots[i].email}/>)\r\n            })\r\n        }\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default CardList;","import React , { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError){\r\n            return <h1>Ooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY : 'scroll', border: '0px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n        <input className=\"pa3 ba b--blue bg-lightest-blue\"\r\n         type=\"search\" \r\n         placeholder=\"Search robots\"\r\n         onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport ErrorBoundry from '../Components/ErrorBoundry';\r\nimport Scroll from '../Components/Scroll'\r\nimport SearchBox from '../Components/SearchBox'\r\n\r\n\r\nclass  App  extends Component {\r\n\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            robots:  [],\r\n            searchfield: ''\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users =>this.setState({robots: users}))\r\n      \r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        this.setState({searchfield: e.target.value})\r\n    }\r\n   render () {\r\n       const {robots, searchfield} = this.state;\r\n    const filterRobots = robots.filter(robot =>{\r\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n\r\n    return !robots.length ?\r\n       <h1>Loading...</h1> :\r\n       (\r\n        <div className=\"tc\">\r\n        <h1>RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n            <ErrorBoundry>\r\n                          <CardList robots={filterRobots}/>\r\n            </ErrorBoundry>\r\n \r\n        </Scroll>\r\n    \r\n        </div>\r\n    )}\r\n   }\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './Containers/App';\nimport 'tachyons';\n\nReactDOM.render( <React.StrictMode> <App/></React.StrictMode>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}